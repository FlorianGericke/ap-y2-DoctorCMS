openapi: 3.0.0
info:
  title: HeadLess-Spring-Aplication (DMS)
  version: 1.0.0
servers:
  - url: http://localhost:8080
tags:
  - name: Address
  - name: Department
  - name: Doctor
  - name: Facility
paths:
  /api/v1/address:
    post:
      tags:
        - Address
      summary: Adding new Address
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                street: PeterStrasse
                houseNumber: '420'
                postCode: 14558
                location: Berlin
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Address
      summary: Get all Addresses
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Address
      summary: Delete multiple Addresses by ID
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/address/53:
    put:
      tags:
        - Address
      summary: Updating Address
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                street: Alte
                houseNumber: 1B
                postCode: 11111
                location: Bauer
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/address/3/facility/1:
    patch:
      tags:
        - Address
      summary: Assign Address, Facility
      requestBody:
        content: {}
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/address/29:
    delete:
      tags:
        - Address
      summary: Delete Address by ID
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/department:
    post:
      tags:
        - Department
      summary: Adding new Department
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: NeuenNeu D
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Department
      summary: Get all Departments
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Department
      summary: Delete multiple Departments by ID
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/department/32:
    put:
      tags:
        - Department
      summary: Updating Department
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: SuperCoolDepartment
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/department/1/facility/1/doctor/1:
    patch:
      tags:
        - Department
      summary: Assign Department, Facility, Doctor
      requestBody:
        content: {}
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/department/65:
    get:
      tags:
        - Department
      summary: Get Department by ID
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/department/129:
    delete:
      tags:
        - Department
      summary: Delete Department by ID
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/doctor:
    post:
      tags:
        - Doctor
      summary: Adding new Doctor
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                firstName: Werner
                lastName: Kessel
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Doctor
      summary: Get all Doctors
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Doctor
      summary: Delete multiple Doctors by ID
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/doctor/1:
    put:
      tags:
        - Doctor
      summary: Updating Doctor
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                firstName: Florian
                lastName: Pahn
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Doctor
      summary: Get Doctor by ID
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/doctor/3/facility/2/department/3:
    patch:
      tags:
        - Doctor
      summary: Assign Department, Facility, Department
      requestBody:
        content: {}
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/doctor/16:
    delete:
      tags:
        - Doctor
      summary: Delete Doctor by ID
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/facility:
    post:
      tags:
        - Facility
      summary: Adding new Facility
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: TestFacility123
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Facility
      summary: Get all Facilities
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Facility
      summary: Delete multiple Facilities by ID
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/facility/15:
    put:
      tags:
        - Facility
      summary: Updating Facility
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Cooles Neues Facility
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/facility/1/address/2:
    patch:
      tags:
        - Facility
      summary: Assign Facility, Address
      requestBody:
        content: {}
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/facility/1/department/2/doctor/3:
    patch:
      tags:
        - Facility
      summary: Assign Facility, Department Doctor
      requestBody:
        content: {}
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/facility/1:
    get:
      tags:
        - Facility
      summary: Get Facility by ID
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
